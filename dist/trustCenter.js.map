{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/queryElement.ts", "../src/utils/queryElements.ts", "../src/trustCenter.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n *\n * @param {string} selector\n * @param parent\n * @returns\n */\nexport function queryElement<T extends HTMLElement>(\n  selector: string,\n  parent?: HTMLElement | Document\n): T | null {\n  return (parent || document).querySelector(selector) as T | null;\n}\n", "/**\n *\n * @param selector\n * @param parent\n * @returns\n */\n\nexport function queryElements<T extends HTMLElement>(\n  selector: string,\n  parent?: Element | Document\n): T[] {\n  return Array.from((parent || document).querySelectorAll(selector)) as T[];\n}\n", "import { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\nwindow.Webflow = window.Webflow || [];\n\nwindow.Webflow.push(() => {\n  // Tables\n  // 1) find any table targets added in webflow rich text\n  const tableTargets = queryElements('[data-table]');\n  if (!tableTargets) return;\n\n  // 2) clone table that matches the target \"key\" and append to target\n  tableTargets.forEach((target) => {\n    const tableKey = target.dataset.table;\n    const tableEl = queryElement(`[table-element=\"${tableKey}\"]`);\n    if (!tableEl) return;\n\n    const newEl = tableEl.cloneNode(true);\n\n    target.appendChild(newEl);\n  });\n\n  // table of contents links\n  const tocLinks: HTMLLinkElement[] = queryElements('[data-toc-link]');\n  if (!tocLinks) return;\n\n  tocLinks.forEach((link) => {\n    const slug = link.dataset.tocLink;\n    link.href = `${link.href}${slug}`;\n  });\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACMtF,WAAS,aACd,UACA,QACU;AACV,YAAQ,UAAU,UAAU,cAAc,QAAQ;AAAA,EACpD;;;ACJO,WAAS,cACd,UACA,QACK;AACL,WAAO,MAAM,MAAM,UAAU,UAAU,iBAAiB,QAAQ,CAAC;AAAA,EACnE;;;ACTA,SAAO,UAAU,OAAO,WAAW,CAAC;AAEpC,SAAO,QAAQ,KAAK,MAAM;AAGxB,UAAM,eAAe,cAAc,cAAc;AACjD,QAAI,CAAC;AAAc;AAGnB,iBAAa,QAAQ,CAAC,WAAW;AAC/B,YAAM,WAAW,OAAO,QAAQ;AAChC,YAAM,UAAU,aAAa,mBAAmB,YAAY;AAC5D,UAAI,CAAC;AAAS;AAEd,YAAM,QAAQ,QAAQ,UAAU,IAAI;AAEpC,aAAO,YAAY,KAAK;AAAA,IAC1B,CAAC;AAGD,UAAM,WAA8B,cAAc,iBAAiB;AACnE,QAAI,CAAC;AAAU;AAEf,aAAS,QAAQ,CAAC,SAAS;AACzB,YAAM,OAAO,KAAK,QAAQ;AAC1B,WAAK,OAAO,GAAG,KAAK,OAAO;AAAA,IAC7B,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
