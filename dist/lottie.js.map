{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/lottie.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import type { DotLottiePlayer } from '@dotlottie/player-component';\n\nwindow.Webflow = window.Webflow || [];\n\nwindow.Webflow.push(async () => {\n  const slides = document.querySelectorAll(\n    '.swiper-slide.is-productlayout1'\n  ) as NodeListOf<HTMLDivElement>;\n\n  const config = {\n    attributes: true,\n    attributeOldValue: true,\n  };\n\n  let debounceTimer: number;\n\n  // Load Lottie for any slides that are initially active\n  slides.forEach((slide) => {\n    if (slide.classList.contains('swiper-slide-active')) {\n      loadLottieForSlide(slide);\n    }\n  });\n\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n        const current = (mutation.target as HTMLDivElement).getAttribute('class');\n        if (!current) return;\n\n        const old = mutation.oldValue;\n        if (!old) return;\n\n        if (\n          current.includes('swiper-slide-active') &&\n          (!old || !old.includes('swiper-slide-active'))\n        ) {\n          clearTimeout(debounceTimer); // Clear any previous timers\n          debounceTimer = setTimeout(() => {\n            loadLottieForSlide(mutation.target as HTMLDivElement);\n          }, 20); // Wait for 100ms to react\n        }\n      }\n    });\n  });\n\n  slides.forEach((slide) => {\n    observer.observe(slide, config);\n  });\n});\n\nfunction loadLottieForSlide(slide: HTMLDivElement) {\n  const { lottie } = slide.dataset;\n  const player = slide.querySelector('dotlottie-player') as DotLottiePlayer;\n  if (!player || !lottie) return;\n  const { lottieLoaded } = player.dataset;\n\n  if (lottieLoaded) return;\n  player.load(lottie);\n  player.setAttribute('data-lottie-loaded', 'true');\n}\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACE7F,SAAO,UAAU,OAAO,WAAW,CAAC;AAEpC,SAAO,QAAQ,KAAK,YAAY;AAC9B,UAAM,SAAS,SAAS;AAAA,MACtB;AAAA,IACF;AAEA,UAAM,SAAS;AAAA,MACb,YAAY;AAAA,MACZ,mBAAmB;AAAA,IACrB;AAEA,QAAI;AAGJ,WAAO,QAAQ,CAAC,UAAU;AACxB,UAAI,MAAM,UAAU,SAAS,qBAAqB,GAAG;AACnD,2BAAmB,KAAK;AAAA,MAC1B;AAAA,IACF,CAAC;AAED,UAAM,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACnD,gBAAU,QAAQ,CAAC,aAAa;AAC9B,YAAI,SAAS,SAAS,gBAAgB,SAAS,kBAAkB,SAAS;AACxE,gBAAM,UAAW,SAAS,OAA0B,aAAa,OAAO;AACxE,cAAI,CAAC;AAAS;AAEd,gBAAM,MAAM,SAAS;AACrB,cAAI,CAAC;AAAK;AAEV,cACE,QAAQ,SAAS,qBAAqB,MACrC,CAAC,OAAO,CAAC,IAAI,SAAS,qBAAqB,IAC5C;AACA,yBAAa,aAAa;AAC1B,4BAAgB,WAAW,MAAM;AAC/B,iCAAmB,SAAS,MAAwB;AAAA,YACtD,GAAG,EAAE;AAAA,UACP;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,WAAO,QAAQ,CAAC,UAAU;AACxB,eAAS,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC;AAAA,EACH,CAAC;AAED,WAAS,mBAAmB,OAAuB;AACjD,UAAM,EAAE,OAAO,IAAI,MAAM;AACzB,UAAM,SAAS,MAAM,cAAc,kBAAkB;AACrD,QAAI,CAAC,UAAU,CAAC;AAAQ;AACxB,UAAM,EAAE,aAAa,IAAI,OAAO;AAEhC,QAAI;AAAc;AAClB,WAAO,KAAK,MAAM;AAClB,WAAO,aAAa,sBAAsB,MAAM;AAAA,EAClD;",
  "names": []
}
